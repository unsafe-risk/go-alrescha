// Code generated by qtc from "marshal.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line goqtpl/marshal.qtpl:1
package goqtpl

//line goqtpl/marshal.qtpl:1
import "github.com/unsafe-risk/go-alrescha/parser"

//line goqtpl/marshal.qtpl:3
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line goqtpl/marshal.qtpl:3
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line goqtpl/marshal.qtpl:4
func ConvertToGoType(RawType string) string {
	switch RawType {
	case "i8":
		return "int8"
	case "i16":
		return "int16"
	case "i32":
		return "int32"
	case "i64":
		return "int64"
	case "u8":
		return "uint8"
	case "u16":
		return "uint16"
	case "u32":
		return "uint32"
	case "u64":
		return "uint64"
	case "f32":
		return "float32"
	case "f64":
		return "float64"
	case "str":
		return "string"
	case "bytes":
		return "[]byte"
	}
	return RawType
}

func IntInfo(RawType string) (isInteger bool, isUint bool, uIntType string) {
	switch RawType {
	case "i8":
		return true, false, "uint8"
	case "i16":
		return true, false, "uint16"
	case "i32":
		return true, false, "uint32"
	case "i64":
		return true, false, "uint64"
	case "u8":
		return true, true, "uint8"
	case "u16":
		return true, true, "uint16"
	case "u32":
		return true, true, "uint32"
	case "u64":
		return true, true, "uint64"
	}
	return false, false, RawType
}

func isInteger(RawType string) bool {
	isInteger, _, _ := IntInfo(RawType)
	return isInteger
}

func isUint(RawType string) bool {
	_, isuint, _ := IntInfo(RawType)
	return isuint
}

func getUintType(RawType string) string {
	_, _, uIntType := IntInfo(RawType)
	return uIntType
}

func sumSize(fields []*parser.GenerateField) int {
	var size int
	for i := range fields {
		if fields[i].IsFixed {
			size += fields[i].Size
		}
	}
	return size
}

//line goqtpl/marshal.qtpl:82
func StreamSerializeStatic(qw422016 *qt422016.Writer, VarName, RawType string, Offset, Size int) {
//line goqtpl/marshal.qtpl:82
	qw422016.N().S(`
    `)
//line goqtpl/marshal.qtpl:83
	if isInteger(RawType) {
//line goqtpl/marshal.qtpl:83
		qw422016.N().S(`
        `)
//line goqtpl/marshal.qtpl:84
		StreamIntegerStatic(qw422016, VarName, RawType, Offset, Size)
//line goqtpl/marshal.qtpl:84
		qw422016.N().S(`
    `)
//line goqtpl/marshal.qtpl:85
	} else {
//line goqtpl/marshal.qtpl:85
		qw422016.N().S(`
    /*
    | TODO: Serialize `)
//line goqtpl/marshal.qtpl:87
		qw422016.E().S(RawType)
//line goqtpl/marshal.qtpl:87
		qw422016.N().S(` to a []byte
    */
    `)
//line goqtpl/marshal.qtpl:89
	}
//line goqtpl/marshal.qtpl:89
	qw422016.N().S(`
`)
//line goqtpl/marshal.qtpl:90
}

//line goqtpl/marshal.qtpl:90
func WriteSerializeStatic(qq422016 qtio422016.Writer, VarName, RawType string, Offset, Size int) {
//line goqtpl/marshal.qtpl:90
	qw422016 := qt422016.AcquireWriter(qq422016)
//line goqtpl/marshal.qtpl:90
	StreamSerializeStatic(qw422016, VarName, RawType, Offset, Size)
//line goqtpl/marshal.qtpl:90
	qt422016.ReleaseWriter(qw422016)
//line goqtpl/marshal.qtpl:90
}

//line goqtpl/marshal.qtpl:90
func SerializeStatic(VarName, RawType string, Offset, Size int) string {
//line goqtpl/marshal.qtpl:90
	qb422016 := qt422016.AcquireByteBuffer()
//line goqtpl/marshal.qtpl:90
	WriteSerializeStatic(qb422016, VarName, RawType, Offset, Size)
//line goqtpl/marshal.qtpl:90
	qs422016 := string(qb422016.B)
//line goqtpl/marshal.qtpl:90
	qt422016.ReleaseByteBuffer(qb422016)
//line goqtpl/marshal.qtpl:90
	return qs422016
//line goqtpl/marshal.qtpl:90
}

//line goqtpl/marshal.qtpl:92
func StreamMakeMarshal(qw422016 *qt422016.Writer, name string, fields []*parser.GenerateField) {
//line goqtpl/marshal.qtpl:92
	qw422016.N().S(`
func (v *`)
//line goqtpl/marshal.qtpl:93
	qw422016.E().S(name)
//line goqtpl/marshal.qtpl:93
	qw422016.N().S(`) WriteTo(w io.Writer) {
    `)
//line goqtpl/marshal.qtpl:94
	if sumSize(fields) > 0 {
//line goqtpl/marshal.qtpl:94
		qw422016.N().S(`
    var staticBuffer [`)
//line goqtpl/marshal.qtpl:95
		qw422016.N().D(sumSize(fields))
//line goqtpl/marshal.qtpl:95
		qw422016.N().S(`]byte
    `)
//line goqtpl/marshal.qtpl:96
	}
//line goqtpl/marshal.qtpl:96
	qw422016.N().S(`
    `)
//line goqtpl/marshal.qtpl:97
	for i, field := range fields {
//line goqtpl/marshal.qtpl:97
		qw422016.N().S(`
        // `)
//line goqtpl/marshal.qtpl:98
		qw422016.N().D(i)
//line goqtpl/marshal.qtpl:98
		qw422016.N().S(` : `)
//line goqtpl/marshal.qtpl:98
		qw422016.E().S(name)
//line goqtpl/marshal.qtpl:98
		qw422016.E().S(field.Path)
//line goqtpl/marshal.qtpl:98
		qw422016.N().S(`
        // Type : `)
//line goqtpl/marshal.qtpl:99
		qw422016.E().S(field.RawType)
//line goqtpl/marshal.qtpl:99
		qw422016.N().S(`
        `)
//line goqtpl/marshal.qtpl:100
		if field.IsFixed {
//line goqtpl/marshal.qtpl:100
			qw422016.N().S(`// Size : `)
//line goqtpl/marshal.qtpl:100
			qw422016.N().D(field.Size)
//line goqtpl/marshal.qtpl:100
		} else {
//line goqtpl/marshal.qtpl:100
			qw422016.N().S(`// Size : Variable`)
//line goqtpl/marshal.qtpl:100
		}
//line goqtpl/marshal.qtpl:100
		qw422016.N().S(`
        // Offset : `)
//line goqtpl/marshal.qtpl:101
		qw422016.N().D(field.Offset)
//line goqtpl/marshal.qtpl:101
		qw422016.N().S(`
        `)
//line goqtpl/marshal.qtpl:102
		StreamSerializeStatic(qw422016, "v"+field.Path, field.RawType, field.Offset, field.Size)
//line goqtpl/marshal.qtpl:102
		qw422016.N().S(`
        `)
//line goqtpl/marshal.qtpl:103
		if field.IsFixed {
//line goqtpl/marshal.qtpl:103
			qw422016.N().S(`

        `)
//line goqtpl/marshal.qtpl:105
		} else {
//line goqtpl/marshal.qtpl:105
			qw422016.N().S(`

        `)
//line goqtpl/marshal.qtpl:107
		}
//line goqtpl/marshal.qtpl:107
		qw422016.N().S(`
    `)
//line goqtpl/marshal.qtpl:108
	}
//line goqtpl/marshal.qtpl:108
	qw422016.N().S(`
    `)
//line goqtpl/marshal.qtpl:109
	if sumSize(fields) > 0 {
//line goqtpl/marshal.qtpl:109
		qw422016.N().S(`
    w.Write(staticBuffer[:])
    `)
//line goqtpl/marshal.qtpl:111
	}
//line goqtpl/marshal.qtpl:111
	qw422016.N().S(`
}
`)
//line goqtpl/marshal.qtpl:113
}

//line goqtpl/marshal.qtpl:113
func WriteMakeMarshal(qq422016 qtio422016.Writer, name string, fields []*parser.GenerateField) {
//line goqtpl/marshal.qtpl:113
	qw422016 := qt422016.AcquireWriter(qq422016)
//line goqtpl/marshal.qtpl:113
	StreamMakeMarshal(qw422016, name, fields)
//line goqtpl/marshal.qtpl:113
	qt422016.ReleaseWriter(qw422016)
//line goqtpl/marshal.qtpl:113
}

//line goqtpl/marshal.qtpl:113
func MakeMarshal(name string, fields []*parser.GenerateField) string {
//line goqtpl/marshal.qtpl:113
	qb422016 := qt422016.AcquireByteBuffer()
//line goqtpl/marshal.qtpl:113
	WriteMakeMarshal(qb422016, name, fields)
//line goqtpl/marshal.qtpl:113
	qs422016 := string(qb422016.B)
//line goqtpl/marshal.qtpl:113
	qt422016.ReleaseByteBuffer(qb422016)
//line goqtpl/marshal.qtpl:113
	return qs422016
//line goqtpl/marshal.qtpl:113
}

//line goqtpl/marshal.qtpl:115
func StreamIntegerStatic(qw422016 *qt422016.Writer, VarName string, RawType string, Offset, Size int) {
//line goqtpl/marshal.qtpl:115
	qw422016.N().S(`
    // Size : `)
//line goqtpl/marshal.qtpl:116
	qw422016.N().D(Size)
//line goqtpl/marshal.qtpl:116
	qw422016.N().S(`, Offset : `)
//line goqtpl/marshal.qtpl:116
	qw422016.N().D(Offset)
//line goqtpl/marshal.qtpl:116
	qw422016.N().S(`, VarName : `)
//line goqtpl/marshal.qtpl:116
	qw422016.E().S(VarName)
//line goqtpl/marshal.qtpl:116
	qw422016.N().S(`
    `)
//line goqtpl/marshal.qtpl:117
	for i := 0; i < Size; i++ {
//line goqtpl/marshal.qtpl:117
		qw422016.N().S(`
        `)
//line goqtpl/marshal.qtpl:118
		if isUint(RawType) {
//line goqtpl/marshal.qtpl:118
			qw422016.N().S(`
        staticBuffer[`)
//line goqtpl/marshal.qtpl:119
			qw422016.N().D(Offset + Size - 1 - i)
//line goqtpl/marshal.qtpl:119
			qw422016.N().S(`] = byte(`)
//line goqtpl/marshal.qtpl:119
			qw422016.E().S(VarName)
//line goqtpl/marshal.qtpl:119
			if i != 0 {
//line goqtpl/marshal.qtpl:119
				qw422016.N().S(` >> `)
//line goqtpl/marshal.qtpl:119
				qw422016.N().D(i * 8)
//line goqtpl/marshal.qtpl:119
			}
//line goqtpl/marshal.qtpl:119
			qw422016.N().S(`)
        `)
//line goqtpl/marshal.qtpl:120
		} else {
//line goqtpl/marshal.qtpl:120
			qw422016.N().S(`
        staticBuffer[`)
//line goqtpl/marshal.qtpl:121
			qw422016.N().D(Offset + Size - 1 - i)
//line goqtpl/marshal.qtpl:121
			qw422016.N().S(`] = byte(`)
//line goqtpl/marshal.qtpl:121
			qw422016.N().S(getUintType(RawType))
//line goqtpl/marshal.qtpl:121
			qw422016.N().S(`}(`)
//line goqtpl/marshal.qtpl:121
			qw422016.E().S(VarName)
//line goqtpl/marshal.qtpl:121
			if i != 0 {
//line goqtpl/marshal.qtpl:121
				qw422016.N().S(` >> `)
//line goqtpl/marshal.qtpl:121
				qw422016.N().D(i * 8)
//line goqtpl/marshal.qtpl:121
			}
//line goqtpl/marshal.qtpl:121
			qw422016.N().S(`))
        `)
//line goqtpl/marshal.qtpl:122
		}
//line goqtpl/marshal.qtpl:122
		qw422016.N().S(`
    `)
//line goqtpl/marshal.qtpl:123
	}
//line goqtpl/marshal.qtpl:123
	qw422016.N().S(`
`)
//line goqtpl/marshal.qtpl:124
}

//line goqtpl/marshal.qtpl:124
func WriteIntegerStatic(qq422016 qtio422016.Writer, VarName string, RawType string, Offset, Size int) {
//line goqtpl/marshal.qtpl:124
	qw422016 := qt422016.AcquireWriter(qq422016)
//line goqtpl/marshal.qtpl:124
	StreamIntegerStatic(qw422016, VarName, RawType, Offset, Size)
//line goqtpl/marshal.qtpl:124
	qt422016.ReleaseWriter(qw422016)
//line goqtpl/marshal.qtpl:124
}

//line goqtpl/marshal.qtpl:124
func IntegerStatic(VarName string, RawType string, Offset, Size int) string {
//line goqtpl/marshal.qtpl:124
	qb422016 := qt422016.AcquireByteBuffer()
//line goqtpl/marshal.qtpl:124
	WriteIntegerStatic(qb422016, VarName, RawType, Offset, Size)
//line goqtpl/marshal.qtpl:124
	qs422016 := string(qb422016.B)
//line goqtpl/marshal.qtpl:124
	qt422016.ReleaseByteBuffer(qb422016)
//line goqtpl/marshal.qtpl:124
	return qs422016
//line goqtpl/marshal.qtpl:124
}
